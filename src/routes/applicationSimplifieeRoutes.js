const express = require("express");
const multer = require("multer");
const ApplicationSimplifiee = require("../models/applicationsimplifiee");

const router = express.Router();

// ðŸ“Œ Configuration de Multer pour uploader les CVs
const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, "uploads/cvs"); // Dossier oÃ¹ les fichiers seront stockÃ©s
  },
  filename: function (req, file, cb) {
    cb(null, Date.now() + "-" + file.originalname);
  },
});
const upload = multer({ storage: storage });

// ðŸ“Œ Route pour soumettre une candidature simplifiÃ©e
router.post("/apply", upload.single("cv"), async (req, res) => {
    try {
      console.log("DonnÃ©es reÃ§ues :", req.body);
      console.log("Fichier reÃ§u :", req.file);
  
      const {
        firstName,
        lastName,
        email,
       
       category, // âœ… Correction ici
        jobType,
        gender
      } = req.body;
  
      const cvPath = req.file ? req.file.path : null;
  
      if (!cvPath) {
        return res.status(400).json({ message: "Veuillez uploader un CV" });
      }
  
      const newApplication = new ApplicationSimplifiee({
        firstname: firstName,
        lastname: lastName,
        email,
        category: category, // âœ… Correction ici
        jobType,
        gender,
        cv: cvPath
      });
  
      await newApplication.save();
      res.status(201).json({ message: "Candidature simplifiÃ©e envoyÃ©e avec succÃ¨s !" });
  
    } catch (error) {
      console.error("Erreur serveur :", error);
      res.status(500).json({ message: "Erreur serveur", error });
    }
});

// ðŸ“Œ Route pour supprimer une candidature simplifiÃ©e
router.delete("/applications-simplifiees/:id", async (req, res) => {
  try {
      const application = await ApplicationSimplifiee.findByIdAndDelete(req.params.id);
      if (!application) {
          return res.status(404).json({ message: "Candidature non trouvÃ©e" });
      }
      res.json({ message: "Candidature supprimÃ©e avec succÃ¨s" });
  } catch (error) {
      res.status(500).json({ message: "Erreur serveur", error });
  }
});

//recuperer tous les candidaturessimplifier 
router.get("/applications", async (req, res) => {
  try {
      const applications = await ApplicationSimplifiee.find();
      res.json(applications);
  } catch (error) {
      res.status(500).json({ message: "Erreur serveur", error });
  }
});


  
  

// ðŸ“Œ Route pour rÃ©cupÃ©rer toutes les catÃ©gories
router.get("/categories", async (req, res) => {
  const categories = ["Informatique", "Marketing", "Finance", "Ressources Humaines"];
  res.json(categories);
});

// ðŸ“Œ Route pour rÃ©cupÃ©rer les types de jobs
router.get("/jobTypes", async (req, res) => {
  const jobTypes = ["CDI", "CDD", "Freelance", "Stage"];
  res.json(jobTypes);
});

module.exports = router;
